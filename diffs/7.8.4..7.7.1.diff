diff --git a/IgniteDiffApp/app.json b/IgniteDiffApp/app.json
index 88f1729..0e7db0c 100644
--- a/IgniteDiffApp/app.json
+++ b/IgniteDiffApp/app.json
@@ -1,6 +1,4 @@
 {
-  "name": "IgniteDiffApp",
-  "displayName": "IgniteDiffApp",
   "expo": {
     "name": "IgniteDiffApp",
     "slug": "IgniteDiffApp",
diff --git a/IgniteDiffApp/app/app.tsx b/IgniteDiffApp/app/app.tsx
index bdd8f3b..a4fea22 100644
--- a/IgniteDiffApp/app/app.tsx
+++ b/IgniteDiffApp/app/app.tsx
@@ -15,7 +15,7 @@ import React, { useState, useEffect } from "react"
 import { SafeAreaProvider, initialWindowMetrics } from "react-native-safe-area-context"
 import { initFonts } from "./theme/fonts" // expo
 import * as storage from "./utils/storage"
-import { AppNavigator, useNavigationPersistence } from "./navigators"
+import { useBackButtonHandler, AppNavigator, canExit, useNavigationPersistence } from "./navigators"
 import { RootStore, RootStoreProvider, setupRootStore } from "./models"
 import { ToggleStorybook } from "../storybook/toggle-storybook"
 import { ErrorBoundary } from "./screens/error/error-boundary"
@@ -31,6 +31,8 @@ export const NAVIGATION_PERSISTENCE_KEY = "NAVIGATION_STATE"
  */
 function App() {
   const [rootStore, setRootStore] = useState<RootStore | undefined>(undefined)
+
+  useBackButtonHandler(canExit)
   const {
     initialNavigationState,
     onNavigationStateChange,
diff --git a/IgniteDiffApp/app/components/bullet-item/bullet-item.story.tsx b/IgniteDiffApp/app/components/bullet-item/bullet-item.story.tsx
deleted file mode 100644
index 85df52c..0000000
--- a/IgniteDiffApp/app/components/bullet-item/bullet-item.story.tsx
+++ /dev/null
@@ -1,33 +0,0 @@
-import { storiesOf } from "@storybook/react-native"
-import * as React from "react"
-import { View } from "react-native"
-import { Story, StoryScreen, UseCase } from "../../../storybook/views"
-import { color } from "../../theme"
-import { BulletItem } from "./bullet-item"
-
-declare let module
-
-const VIEWSTYLE = {
-  flex: 1,
-  backgroundColor: color.storybookDarkBg,
-  borderWidth: 5,
-}
-
-storiesOf("Bullet Item", module)
-  .addDecorator((fn) => <StoryScreen>{fn()}</StoryScreen>)
-  .add("Styling", () => (
-    <Story>
-      <UseCase noPad text="default" usage="The default usage">
-        <BulletItem text="The default Bullet Item text" />
-      </UseCase>
-      <UseCase
-        noPad
-        text="with view wrapper"
-        usage={`backgroundColor: ${color.storybookDarkBg} (color.storybookDarkBg)`}
-      >
-        <View style={VIEWSTYLE}>
-          <BulletItem text="The default Bullet Item text" />
-        </View>
-      </UseCase>
-    </Story>
-  ))
diff --git a/IgniteDiffApp/app/navigators/app-navigator.tsx b/IgniteDiffApp/app/navigators/app-navigator.tsx
index a5a4cfc..a84bd6e 100644
--- a/IgniteDiffApp/app/navigators/app-navigator.tsx
+++ b/IgniteDiffApp/app/navigators/app-navigator.tsx
@@ -9,7 +9,7 @@ import { useColorScheme } from "react-native"
 import { NavigationContainer, DefaultTheme, DarkTheme } from "@react-navigation/native"
 import { createNativeStackNavigator } from "@react-navigation/native-stack"
 import { WelcomeScreen, DemoScreen, DemoListScreen } from "../screens"
-import { navigationRef, useBackButtonHandler } from "./navigation-utilities"
+import { navigationRef } from "./navigation-utilities"
 
 /**
  * This type allows TypeScript to know what routes are defined in this navigator
@@ -51,7 +51,6 @@ interface NavigationProps extends Partial<React.ComponentProps<typeof Navigation
 
 export const AppNavigator = (props: NavigationProps) => {
   const colorScheme = useColorScheme()
-  useBackButtonHandler(canExit)
   return (
     <NavigationContainer
       ref={navigationRef}
diff --git a/IgniteDiffApp/app/navigators/navigation-utilities.tsx b/IgniteDiffApp/app/navigators/navigation-utilities.tsx
index ed611f0..7fa90c0 100644
--- a/IgniteDiffApp/app/navigators/navigation-utilities.tsx
+++ b/IgniteDiffApp/app/navigators/navigation-utilities.tsx
@@ -57,9 +57,8 @@ export function useBackButtonHandler(canExit: (routeName: string) => boolean) {
 
       // are we allowed to exit?
       if (canExitRef.current(routeName)) {
-        // exit and let the system know we've handled the event
-        BackHandler.exitApp()
-        return true
+        // let the system know we've not handled this event
+        return false
       }
 
       // we can't exit, so let's turn this into a back action
diff --git a/IgniteDiffApp/app/services/reactotron/reactotron-config.ts b/IgniteDiffApp/app/services/reactotron/reactotron-config.ts
index 707c845..dd87bd7 100644
--- a/IgniteDiffApp/app/services/reactotron/reactotron-config.ts
+++ b/IgniteDiffApp/app/services/reactotron/reactotron-config.ts
@@ -28,8 +28,3 @@ export const DEFAULT_REACTOTRON_CONFIG: ReactotronConfig = {
     snapshots: false,
   },
 }
-
-/**
- * The default Reactotron WebSocket URI
- */
-export const DEFAULT_REACTOTRON_WS_URI = "ws://localhost:9090"
diff --git a/IgniteDiffApp/ignite/templates/navigator/NAME-navigator.tsx.ejs b/IgniteDiffApp/ignite/templates/navigator/NAME-navigator.tsx.ejs
index 5faebc6..fc62ba8 100644
--- a/IgniteDiffApp/ignite/templates/navigator/NAME-navigator.tsx.ejs
+++ b/IgniteDiffApp/ignite/templates/navigator/NAME-navigator.tsx.ejs
@@ -4,12 +4,12 @@ import {
   DemoScreen
 } from "../../screens"
 
-export type <%= props.pascalCaseName %>NavigatorParamList = {
+export type <%= props.pascalCaseName %>ParamList = {
   demo: undefined
 }
 
-const Stack = createStackNavigator<<%= props.pascalCaseName %>NavigatorParamList>()
-export const <%= props.pascalCaseName %>Navigator = () => {
+const Stack = createStackNavigator<<%= props.pascalCaseName %>ParamList>()
+export const <%= props.pascalCaseName %> = () => {
   return (
     <Stack.Navigator screenOptions={{ cardStyle: { backgroundColor: "transparent" }, headerShown: false, }}>
       <Stack.Screen name="demo" component={DemoScreen} />
diff --git a/IgniteDiffApp/storybook/storybook-registry.ts b/IgniteDiffApp/storybook/storybook-registry.ts
index 13a27c2..c782fc7 100644
--- a/IgniteDiffApp/storybook/storybook-registry.ts
+++ b/IgniteDiffApp/storybook/storybook-registry.ts
@@ -1,7 +1,6 @@
 require("../app/components/text/text.story")
 require("../app/components/auto-image/auto-image.story")
 require("../app/components/button/button.story")
-require("../app/components/bullet-item/bullet-item.story")
 require("../app/components/form-row/form-row.story")
 require("../app/components/switch/switch.story")
 require("../app/components/text-field/text-field.story")
diff --git a/IgniteDiffApp/storybook/toggle-storybook.tsx b/IgniteDiffApp/storybook/toggle-storybook.tsx
index 9c9b43f..394ecf4 100644
--- a/IgniteDiffApp/storybook/toggle-storybook.tsx
+++ b/IgniteDiffApp/storybook/toggle-storybook.tsx
@@ -1,7 +1,6 @@
-import React, { useState, useEffect, useRef } from "react"
+import React, { useState, useEffect } from "react"
 import { DevSettings } from "react-native"
 import { loadString, saveString } from "../app/utils/storage"
-import { DEFAULT_REACTOTRON_WS_URI } from "../app/services/reactotron/reactotron-config"
 
 /**
  * Toggle Storybook mode, in __DEV__ mode only.
@@ -16,19 +15,14 @@ import { DEFAULT_REACTOTRON_WS_URI } from "../app/services/reactotron/reactotron
 export function ToggleStorybook(props) {
   const [showStorybook, setShowStorybook] = useState(false)
   const [StorybookUIRoot, setStorybookUIRoot] = useState(null)
-  const ws = useRef(new WebSocket(DEFAULT_REACTOTRON_WS_URI))
 
   useEffect(() => {
-    if (!__DEV__) {
-      return undefined
-    }
-
-    // Load the setting from storage if it's there
-    loadString("devStorybook").then((storedSetting) => {
-      // Set the initial value
-      setShowStorybook(storedSetting === "on")
+    if (__DEV__ && DevSettings) {
+      // Load the setting from storage if it's there
+      loadString("devStorybook").then((storedSetting) => {
+        // Set the initial value
+        setShowStorybook(storedSetting === "on")
 
-      if (DevSettings) {
         // Add our toggle command to the menu
         DevSettings.addMenuItem("Toggle Storybook", () => {
           setShowStorybook((show) => {
@@ -42,25 +36,11 @@ export function ToggleStorybook(props) {
             return show
           })
         })
-      }
-
-      // Load the storybook UI once
-      setStorybookUIRoot(() => require("./storybook").StorybookUIRoot)
 
-      // Behave as Reactotron.storybookSwitcher(), not a HOC way.
-      ws.current.onmessage = (e) => {
-        const data = JSON.parse(e.data)
-
-        if (data.type === "storybook") {
-          saveString("devStorybook", data.payload ? "on" : "off")
-          setShowStorybook(data.payload)
-        }
-      }
-      ws.current.onerror = (e) => {
-        console.tron.error(e, null)
-        setShowStorybook(storedSetting === "on")
-      }
-    })
+        // Load the storybook UI once
+        setStorybookUIRoot(() => require("./storybook").StorybookUIRoot)
+      })
+    }
   }, [])
 
   if (showStorybook) {
